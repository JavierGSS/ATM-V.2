{"ast":null,"code":"var _jsxFileName = \"/Users/babalu/Desktop/Desktop - Perikles/MIT/Week 15/ATM_Exercise/atm-refactored/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ATMDeposit = ({\n  onChange,\n  isDeposit\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"label-huge\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"input\",\n      onChange: onChange,\n      placeholder: \"Enter amount...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n};\n_c = ATMDeposit;\nconst App = () => {\n  _s();\n  let deposit = 0; //state of this transaction\n  const [totalState, setTotalState] = React.useState(0);\n\n  // we create a new state variable to handle deposits; we initialize it with true:\n  const [isDeposit, setIsDeposit] = React.useState(true);\n  const [atmMode, setAtmMode] = React.useState(\"\");\n  const [validTransaction, setValidTransaction] = React.useState(false);\n  let status = `Account balance: $${totalState}`;\n  console.log('Account rendered');\n  const handleChange = event => {\n    console.log(`handle change: ${event.target.value}.`);\n    deposit = Number(event.target.value);\n  };\n  const handleSubmit = event => {\n    // we create a new variable newTotal whose value depends on whether \n    // isDeposit is true or false:\n    let newTotal = totalState;\n\n    // this series of if-statements determine the newTotal variable and restricts withdraws:\n    if (isDeposit == true) {\n      newTotal = totalState + deposit;\n    } else {\n      if (totalState - deposit >= 0) {\n        newTotal = totalState - deposit;\n      } else {\n        if (totalState > 0) {\n          alert(`Insufficient funds. Please enter an amount less than or equal to $${totalState}.`);\n          newTotal = totalState;\n        }\n        if (totalState == 0) {\n          alert(`Your accout balance is $${totalState}. You are not authorized to withdraw any money.`);\n          newTotal = totalState;\n        }\n      }\n    }\n    setTotalState(newTotal);\n\n    // event.target.reset() clears the input field upon submission:\n    event.target.reset();\n    event.preventDefault();\n  };\n  const handleModeSelect = event => {\n    setAtmMode(event.target.value);\n    event.target.value == \"Deposit\" ? setIsDeposit(true) : setIsDeposit(false);\n    return event.target.value;\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cool Bank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"total\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => handleModeSelect(e),\n        name: \"mode\",\n        id: \"mode-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"no-selection\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"deposit-selection\",\n          value: \"Deposit\",\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"cashback-selection\",\n          value: \"Cash Back\",\n          children: \"Cash Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ATMDeposit, {\n        onChange: handleChange,\n        isDeposit: isDeposit,\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"hI4s+3EHHjG4GSBv/P2r1grezAU=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ATMDeposit\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ATMDeposit","onChange","isDeposit","className","children","type","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","App","_s","deposit","totalState","setTotalState","useState","setIsDeposit","atmMode","setAtmMode","validTransaction","setValidTransaction","status","console","log","handleChange","event","target","Number","handleSubmit","newTotal","alert","reset","preventDefault","handleModeSelect","onSubmit","e","name","_c2","$RefreshReg$"],"sources":["/Users/babalu/Desktop/Desktop - Perikles/MIT/Week 15/ATM_Exercise/atm-refactored/src/App.jsx"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst ATMDeposit = ({onChange, isDeposit}) => {\n  return (\n      <label className=\"label-huge\">\n          <input type=\"number\" id=\"input\" onChange={onChange} placeholder=\"Enter amount...\"></input>\n          <input type=\"submit\" value=\"Submit\"></input>\n      </label>\n      \n  );\n};\n\nconst App = () => {\n  let deposit = 0; //state of this transaction\n  const [totalState, setTotalState] = React.useState(0);\n\n  // we create a new state variable to handle deposits; we initialize it with true:\n  const [isDeposit, setIsDeposit] = React.useState(true);\n  const [atmMode, setAtmMode] = React.useState(\"\");\n  const [validTransaction, setValidTransaction] = React.useState(false);\n  let status = `Account balance: $${totalState}`;\n  console.log('Account rendered');\n\n  const handleChange = event => {\n      console.log(`handle change: ${event.target.value}.`);\n      deposit = Number(event.target.value);\n  };\n\n  const handleSubmit = event => {\n\n      // we create a new variable newTotal whose value depends on whether \n      // isDeposit is true or false:\n      let newTotal = totalState;\n\n      // this series of if-statements determine the newTotal variable and restricts withdraws:\n      if (isDeposit == true) {\n          newTotal = totalState + deposit;\n       } else {\n          if (totalState - deposit >= 0) {\n              newTotal = totalState - deposit;\n          } else {\n              if (totalState > 0) {\n                  alert(`Insufficient funds. Please enter an amount less than or equal to $${totalState}.`);\n                  newTotal = totalState;\n              }\n              if (totalState == 0) {\n                  alert(`Your accout balance is $${totalState}. You are not authorized to withdraw any money.`);\n                  newTotal = totalState;\n              }\n          }\n      }\n      \n      setTotalState(newTotal);\n\n      // event.target.reset() clears the input field upon submission:\n      event.target.reset();\n      event.preventDefault();\n  }\n\n  const handleModeSelect = (event) => {\n    setAtmMode(event.target.value);\n    event.target.value == \"Deposit\" ? setIsDeposit(true) : setIsDeposit(false);\n    return event.target.value;\n    event.preventDefault();\n  }\n\n  return (\n \n      <form id=\"form\" onSubmit={handleSubmit}>\n        <h1>Cool Bank</h1>\n        <h2 id=\"total\">{status}</h2>\n\n        {/* we add two buttons to handle deposits and cash backs, which fire a state update */}\n        <div id=\"container\">\n        <select onChange={(e) => handleModeSelect(e)} name=\"mode\" id=\"mode-select\">\n          <option id=\"no-selection\" value=\"\"></option>\n          <option id=\"deposit-selection\" value=\"Deposit\">Deposit</option>\n          <option id=\"cashback-selection\" value=\"Cash Back\">Cash Back</option>\n        </select>\n        <ATMDeposit onChange={handleChange} isDeposit={isDeposit}>Deposit</ATMDeposit>\n        </div>\n      </form>\n\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}