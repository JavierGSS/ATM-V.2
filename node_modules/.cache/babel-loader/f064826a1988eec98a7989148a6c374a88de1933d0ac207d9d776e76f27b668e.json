{"ast":null,"code":"var _jsxFileName = \"/Users/babalu/Desktop/Desktop - Perikles/MIT/Week 15/ATM_Exercise/atm-refactored/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ATMDeposit = ({\n  onChange,\n  isDeposit,\n  atmMode,\n  isValid\n}) => {\n  const choice = ['Deposit', 'Cash Back'];\n  console.log(`ATM isDeposit: ${isDeposit}`);\n  let mode;\n  atmMode == \"Deposit\" || atmMode == \"Cash Back\" ? mode = true : mode = false;\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"label huge\",\n    children: [mode && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", choice[Number(!isDeposit)]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this), mode && /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"number-input\",\n      type: \"number\",\n      width: \"200\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this), mode && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      width: \"200\",\n      value: \"Submit\",\n      id: \"submit-input\",\n      disabled: !isValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = ATMDeposit;\nconst App = () => {\n  _s();\n  let deposit = 0; //state of this transaction\n  const [totalState, setTotalState] = React.useState(0);\n\n  // we create a new state variable to handle deposits; we initialize it with true:\n  const [isDeposit, setIsDeposit] = React.useState(true);\n  const [atmMode, setAtmMode] = React.useState(\"\");\n  const [validTransaction, setValidTransaction] = React.useState(false);\n  let status = `Account balance: $${totalState}`;\n  console.log('Account rendered');\n  const handleChange = event => {\n    console.log(`handle change: ${event.target.value}.`);\n    deposit = Number(event.target.value);\n  };\n  const handleSubmit = event => {\n    // we create a new variable newTotal whose value depends on whether \n    // isDeposit is true or false:\n    let newTotal = totalState;\n\n    // this series of if-statements determine the newTotal variable and restricts withdraws:\n    if (isDeposit == true) {\n      newTotal = totalState + deposit;\n    } else {\n      if (totalState - deposit >= 0) {\n        newTotal = totalState - deposit;\n      } else {\n        if (totalState > 0) {\n          alert(`Insufficient funds. Please enter an amount less than or equal to $${totalState}.`);\n          newTotal = totalState;\n        }\n        if (totalState == 0) {\n          alert(`Your accout balance is $${totalState}. You are not authorized to withdraw any money.`);\n          newTotal = totalState;\n        }\n      }\n    }\n    setTotalState(newTotal);\n\n    // event.target.reset() clears the input field upon submission:\n    event.target.reset();\n    event.preventDefault();\n  };\n  const handleModeSelect = event => {\n    setAtmMode(event.target.value);\n    event.target.value == \"Deposit\" ? setIsDeposit(true) : setIsDeposit(false);\n    return event.target.value;\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cool Bank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"total\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => handleModeSelect(e),\n        name: \"mode\",\n        id: \"mode-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"no-selection\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"deposit-selection\",\n          value: \"Deposit\",\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"cashback-selection\",\n          value: \"Cash Back\",\n          children: \"Cash Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ATMDeposit, {\n        onChange: handleChange,\n        isDeposit: isDeposit,\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"hI4s+3EHHjG4GSBv/P2r1grezAU=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ATMDeposit\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ATMDeposit","onChange","isDeposit","atmMode","isValid","choice","console","log","mode","className","children","Number","fileName","_jsxFileName","lineNumber","columnNumber","id","type","width","value","disabled","_c","App","_s","deposit","totalState","setTotalState","useState","setIsDeposit","setAtmMode","validTransaction","setValidTransaction","status","handleChange","event","target","handleSubmit","newTotal","alert","reset","preventDefault","handleModeSelect","onSubmit","e","name","_c2","$RefreshReg$"],"sources":["/Users/babalu/Desktop/Desktop - Perikles/MIT/Week 15/ATM_Exercise/atm-refactored/src/App.jsx"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst ATMDeposit = ({ onChange, isDeposit, atmMode, isValid }) => {\n  const choice = ['Deposit', 'Cash Back'];\n  console.log(`ATM isDeposit: ${isDeposit}`);\n\n  let mode;\n  atmMode == \"Deposit\" || atmMode == \"Cash Back\" ? mode = true : mode = false;\n\n  return (\n    <label className=\"label huge\">\n      {mode && <h3> {choice[Number(!isDeposit)]}</h3>}\n      {mode && <input id=\"number-input\" type=\"number\" width=\"200\" onChange={onChange}></input>}\n      {mode && <input type=\"submit\" width=\"200\" value=\"Submit\" id=\"submit-input\" disabled={!isValid}></input>}\n    </label>\n  );\n};\n\nconst App = () => {\n  let deposit = 0; //state of this transaction\n  const [totalState, setTotalState] = React.useState(0);\n\n  // we create a new state variable to handle deposits; we initialize it with true:\n  const [isDeposit, setIsDeposit] = React.useState(true);\n  const [atmMode, setAtmMode] = React.useState(\"\");\n  const [validTransaction, setValidTransaction] = React.useState(false);\n  let status = `Account balance: $${totalState}`;\n  console.log('Account rendered');\n\n  const handleChange = event => {\n      console.log(`handle change: ${event.target.value}.`);\n      deposit = Number(event.target.value);\n  };\n\n  const handleSubmit = event => {\n\n      // we create a new variable newTotal whose value depends on whether \n      // isDeposit is true or false:\n      let newTotal = totalState;\n\n      // this series of if-statements determine the newTotal variable and restricts withdraws:\n      if (isDeposit == true) {\n          newTotal = totalState + deposit;\n       } else {\n          if (totalState - deposit >= 0) {\n              newTotal = totalState - deposit;\n          } else {\n              if (totalState > 0) {\n                  alert(`Insufficient funds. Please enter an amount less than or equal to $${totalState}.`);\n                  newTotal = totalState;\n              }\n              if (totalState == 0) {\n                  alert(`Your accout balance is $${totalState}. You are not authorized to withdraw any money.`);\n                  newTotal = totalState;\n              }\n          }\n      }\n      \n      setTotalState(newTotal);\n\n      // event.target.reset() clears the input field upon submission:\n      event.target.reset();\n      event.preventDefault();\n  }\n\n  const handleModeSelect = (event) => {\n    setAtmMode(event.target.value);\n    event.target.value == \"Deposit\" ? setIsDeposit(true) : setIsDeposit(false);\n    return event.target.value;\n    event.preventDefault();\n  }\n\n  return (\n \n      <form id=\"form\" onSubmit={handleSubmit}>\n        <h1>Cool Bank</h1>\n        <h2 id=\"total\">{status}</h2>\n\n        {/* we add two buttons to handle deposits and cash backs, which fire a state update */}\n        <div id=\"container\">\n        <select onChange={(e) => handleModeSelect(e)} name=\"mode\" id=\"mode-select\">\n          <option id=\"no-selection\" value=\"\"></option>\n          <option id=\"deposit-selection\" value=\"Deposit\">Deposit</option>\n          <option id=\"cashback-selection\" value=\"Cash Back\">Cash Back</option>\n        </select>\n          <ATMDeposit onChange={handleChange} isDeposit={isDeposit}>Deposit</ATMDeposit>\n        </div>\n      </form>\n\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}